<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="rpt01_DailyAccount">

<resultMap 	id="mapper" type="myApp.client.vi.rpt.model.DailyAccountModel" >
	<id		column="row_no"			property="rowNo"/>
	<result	column="company_id"		property="companyId"/>
	<result	column="year_month"		property="yearMonth"/>
	<result	column="trans_date"		property="transDate"/>
	<result	column="account_name"	property="accountName"/>
	<result	column="in_amount"		property="inAmount"/>
	<result	column="out_amount"		property="outAmonut"/>
	<result	column="sum_amount"		property="sumAmount"/>
	<result	column="ord_no"			property="ordNo"/>
</resultMap>

<!--
<parameterMap id="param" type="HashMap">
	<parameter property="companyId" mode="IN" jdbcType="LONGVARCHAR" javaType="Long" /> 
	<parameter property="beginDate" mode="IN" jdbcType="DATE" javaType="Date" /> 
	<parameter property="endDate" mode="IN" jdbcType="DATE" javaType="Date" />
	<parameter property="result" mode="OUT" jdbcType="CURSOR" resultMap= "rpt01_DailyAccount.mapper"/> 
</parameterMap>


<select id="selectByCompanyIdResult" parameterMap="param" statementType="CALLABLE"> 
	{CALL sp_rpt_dailyaccount(?, ?, ?, ?) } 
</select>
-->

<select id="selectByCompanyIdProc" parameterType="HashMap" statementType="CALLABLE"> 
	CALL sp_rpt_dailyaccount(
		#{companyId},
		#{beginDate},
		#{endDate}, 
		#{result, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=rpt01_DailyAccount.mapper}
    )
</select>

<!-- 
<select id="selectByCompanyId" resultMap="mapper" parameterType="HashMap">
	select	row_number() over (order by company_id,year_month,trans_date,account_name)	as	row_no
		,	company_id
		,	year_month
		,	trans_date
		,	account_name
		,	in_amount
		,	out_amount
		,	sum(sum_amount)	over(partition	by	company_id
							order	by	company_id,ord_no,year_month,trans_date,account_name
							rows	between	unbounded	preceding	and	current	row)
							as	sum_amount
		,	ord_no
	from	(
			select	company_id
				,	year_month
				,	trans_date
				,	account_name
				,	sum(in_amount)	in_amount
				,	sum(out_amount)	out_amount
				,	decode(account_name,'전일잔액',sum(sum_amount), sum(in_amount) - sum(out_amount))	sum_amount
				,	ord_no
			from	(
					select	a.company_id
						,	a.year_month
						,	a.trans_date
						,	a.account_name
						,	sum(in_amount)	in_amount
						,	sum(out_amount)	out_amount
						,	sum(sum_amount)	sum_amount
						,	1			ord_no
					from	(
							select	a.company_id
								,	a.year_month
								,	null												trans_date
								,	'전일잔액'											account_name
								,	0													in_amount
								,	0													out_amount
								,	decode(inexp_cd,'OUT',trans_amt*(-1),trans_amt)		sum_amount
							from	view_acc06_trans a
							where	company_id	=	#{companyId}
							and		trans_date	=	if_fr_dt(#{companyId},#{beginDate})
							and		ord_no		=	0
							union	all
							select	a.company_id
								,	a.year_month
								,	null													trans_date
								,	'전일잔액'												account_name
								,	0														in_amount
								,	0														out_amount
								,	sum(decode(inexp_cd,'OUT',trans_amt*(-1),trans_amt))	sum_amount
							from	view_acc06_trans a
							where	company_id	=	#{companyId}
							and		trans_date	between	if_fr_dt(#{companyId},#{beginDate})	and	#{beginDate}  - 1
							and		ord_no		=	1
							group	by	a.company_id,a.year_month
							) a
					group	by	a.company_id,a.year_month,a.trans_date,a.account_name
					union	all
					select	a.company_id
						,	a.year_month
						,	a.trans_date
						,	a.account_name
						,	a.trans_amt					in_amount
						,	0							out_amount
						,	0							sum_amount
						,	3							ord_no
					from	view_acc06_trans a
					where	company_id	=	#{companyId}
					and		trans_date	between	#{beginDate}	and	#{endDate}
					and		inexp_cd	=	'IN'
					and		ord_no		=	1
					union  all
					select	a.company_id
						,	a.year_month
						,	a.trans_date
						,	a.account_name
						,	0							in_amount
						,	a.trans_amt					out_amount
						,	0							sum_amount
						,	3							ord_no
					from	view_acc06_trans a
					where	company_id	=	#{companyId}
					and		trans_date	between	#{beginDate}	and	#{endDate}
					and		inexp_cd	=	'OUT'
					and		ord_no		=	1
			)
			group	by	company_id,year_month,trans_date,ord_no,account_name
	)
</select>
 -->
	
</mapper>